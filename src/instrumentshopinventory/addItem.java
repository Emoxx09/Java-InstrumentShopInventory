/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package instrumentshopinventory;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Flinchy
 */
public class addItem extends javax.swing.JFrame {

    /**
     * Creates new form addItem
     */
    public addItem() throws FileNotFoundException {
        initComponents();
        showitem();
        showProd();
        showProdID();
        
        stock1.addKeyListener(new KeyAdapter() {
               public void keyTyped(KeyEvent e) {
                   char c = e.getKeyChar();
                   if (!((c >= '0') && (c <= '9') ||
                           (c == KeyEvent.VK_BACK_SPACE) ||
                           (c == KeyEvent.VK_DELETE))) {
                       getToolkit().beep();
                       e.consume();
                   }
               }
        });
        stock.addKeyListener(new KeyAdapter() {
               public void keyTyped(KeyEvent e) {
                   char c = e.getKeyChar();
                   if (!((c >= '0') && (c <= '9') ||
                           (c == KeyEvent.VK_BACK_SPACE) ||
                           (c == KeyEvent.VK_DELETE))) {
                       getToolkit().beep();
                       e.consume();
                   }
               }
        });
        price.addKeyListener(new KeyAdapter() {
               public void keyTyped(KeyEvent e) {
                   char c = e.getKeyChar();
                   if (!((c >= '0') && (c <= '9') ||
                           (c == KeyEvent.VK_BACK_SPACE) ||
                           (c == KeyEvent.VK_DELETE))) {
                       getToolkit().beep();
                       e.consume();
                   }
               }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        prodID = new javax.swing.JTextField();
        prodName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        stock = new javax.swing.JTextField();
        price = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        BrandName = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        ProdNameSelect = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        stock1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        brbr = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        home = new javax.swing.JButton();
        ProdIDSelect = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Item");

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Product ID");

        prodID.setBackground(new java.awt.Color(51, 51, 51));
        prodID.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        prodID.setForeground(new java.awt.Color(255, 255, 255));

        prodName.setBackground(new java.awt.Color(51, 51, 51));
        prodName.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        prodName.setForeground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Name");

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Stock");

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Price");

        stock.setBackground(new java.awt.Color(51, 51, 51));
        stock.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        stock.setForeground(new java.awt.Color(255, 255, 255));

        price.setBackground(new java.awt.Color(51, 51, 51));
        price.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        price.setForeground(new java.awt.Color(255, 255, 255));

        jButton1.setBackground(new java.awt.Color(51, 51, 51));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("ADD");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        BrandName.setBackground(new java.awt.Color(51, 51, 51));
        BrandName.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        BrandName.setForeground(new java.awt.Color(255, 255, 255));
        BrandName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Brand" }));
        BrandName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrandNameActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Brand");

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Product Name");

        ProdNameSelect.setBackground(new java.awt.Color(51, 51, 51));
        ProdNameSelect.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        ProdNameSelect.setForeground(new java.awt.Color(255, 255, 255));
        ProdNameSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Product" }));
        ProdNameSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProdNameSelectActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("ADD ITEM");

        jLabel10.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("ADD STOCKS");

        stock1.setBackground(new java.awt.Color(51, 51, 51));
        stock1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        stock1.setForeground(new java.awt.Color(255, 255, 255));
        stock1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stock1ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Stock");

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("ADD");
        jButton2.setToolTipText("");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Brand");

        brbr.setBackground(new java.awt.Color(51, 51, 51));
        brbr.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        brbr.setForeground(new java.awt.Color(255, 255, 255));
        brbr.setEnabled(false);

        jButton3.setBackground(new java.awt.Color(51, 51, 51));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("MINUS");
        jButton3.setToolTipText("");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        home.setBackground(new java.awt.Color(51, 51, 51));
        home.setForeground(new java.awt.Color(255, 255, 255));
        home.setText("HOME");
        home.setToolTipText("");
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });

        ProdIDSelect.setBackground(new java.awt.Color(51, 51, 51));
        ProdIDSelect.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        ProdIDSelect.setForeground(new java.awt.Color(255, 255, 255));
        ProdIDSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select ID" }));
        ProdIDSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProdIDSelectActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Product ID");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(prodName, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(prodID, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(home)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3))
                            .addComponent(jButton1)
                            .addComponent(stock)
                            .addComponent(BrandName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ProdNameSelect, 0, 167, Short.MAX_VALUE)
                            .addComponent(brbr, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ProdIDSelect, 0, 167, Short.MAX_VALUE)
                            .addComponent(stock1, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(prodID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(prodName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(stock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BrandName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(73, 73, 73)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProdIDSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(ProdNameSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(brbr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(home))
                .addGap(105, 105, 105))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
            int continuer = 1;
            
            if (prodID.getText().equals("") || prodName.getText().equals("") || stock.getText().equals("") || 
                    price.getText().equals("") || BrandName.getSelectedItem().equals("Select Brand")) {
                continuer = 0;
            }
            if (continuer == 1) {
                try {
                    existChecker(prodID.getText());
                    prodID.setText("");
                    prodName.setText("");
                    price.setText("");
                    stock.setText("");
                    BrandName.setSelectedItem("Select Brand");
                } catch (IOException e1) {
                    e1.printStackTrace();
                }
            }
            else {
                JOptionPane.showMessageDialog(null, "There seems to be missing fields!");
            }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void BrandNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrandNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BrandNameActionPerformed

    private void ProdNameSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProdNameSelectActionPerformed
        try {
            // TODO add your handling code here:
            ProdIDSelect.setSelectedItem(ProdIDCheck());
            brbr.setText(brandCheck());
        } catch (FileNotFoundException ex) {
            Logger.getLogger(addItem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ProdNameSelectActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            // TODO add your handling code here:
            if (ProdNameSelect.getSelectedItem().equals("Select Product") | brbr.getText().equals("") | stock1.getText().equals("")){
                JOptionPane.showMessageDialog(null, "There seems to be missing fields!");
            }
            else {
                addItemx2("+");
                ProdIDSelect.setSelectedItem("Select ID");
                ProdNameSelect.setSelectedItem("Select Product");
                brbr.setText("");
                stock1.setText("");
            }
        } catch (IOException ex) {
            Logger.getLogger(addItem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            if (ProdNameSelect.getSelectedItem().equals("Select Product") | brbr.getText().equals("") | stock1.getText().equals("")){
                JOptionPane.showMessageDialog(null, "There seems to be missing fields!");
            }
            else {
                addItemx2("-");
                ProdIDSelect.setSelectedItem("Select ID");
                ProdNameSelect.setSelectedItem("Select Product");
                brbr.setText("");
                stock1.setText("");
            }
        } catch (IOException ex) {
            Logger.getLogger(addItem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        try {
            // TODO add your handling code here:
            home();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(DamagedMan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_homeActionPerformed

    private void ProdIDSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProdIDSelectActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            ProdNameSelect.setSelectedItem(ProdNameCheck());
            brbr.setText(brandCheck());
        } catch (FileNotFoundException ex) {
            Logger.getLogger(addItem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ProdIDSelectActionPerformed

    private void stock1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stock1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stock1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new addItem().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(addItem.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    public String ProdNameCheck() throws FileNotFoundException{
        Scanner sc = new Scanner (new FileReader ("src\\Storage.txt"));
        String finalName = "";
        while (sc.hasNextLine()){
            String line = sc.nextLine();
            if (line.equals("")){
                continue;
            }
            Scanner linereader = new Scanner (line);
            String id = linereader.next();
            String name = linereader.next();
            String price = linereader.next();
            int stock = linereader.nextInt();
            String brand = linereader.next();
            
            if (id.equals(ProdIDSelect.getSelectedItem())){
               finalName = name;
            }
        }
        
        return finalName;
    }
    
    public String ProdIDCheck() throws FileNotFoundException{
        Scanner sc = new Scanner (new FileReader ("src\\Storage.txt"));
        String finalID = "";
        while (sc.hasNextLine()){
            String line = sc.nextLine();
            if (line.equals("")){
                continue;
            }
            Scanner linereader = new Scanner (line);
            String id = linereader.next();
            String name = linereader.next();
            String price = linereader.next();
            int stock = linereader.nextInt();
            String brand = linereader.next();
            
            if (name.equals(ProdNameSelect.getSelectedItem())){
               finalID = id;
            }
        }
        
        return finalID;
    }
    
    public void addItemx() throws IOException {
	String prodName = underScorer();
        String line = prodID.getText() + "\t" + prodName + "\t" + price.getText() + "\t" + stock.getText()
                + "\t" + BrandName.getSelectedItem();
        BufferedWriter bw = new BufferedWriter (new FileWriter ("src\\Storage.txt", true));
        bw.append(line + "\n");
        JOptionPane.showMessageDialog(null, "Item Added");
        bw.close();
    }
    
    public void addItemx2(String op) throws IOException {
        Scanner sc = new Scanner (new FileReader ("src\\Storage.txt"));
        String content = "";
        while (sc.hasNextLine()){
            String line = sc.nextLine();
            if (line.equals("")){
                continue;
            }
            Scanner linereader = new Scanner (line);
            String id = linereader.next();
            String name = linereader.next();
            String price = linereader.next();
            int stock = linereader.nextInt();
            String brand = linereader.next();
            
            if (id.equals(ProdIDSelect.getSelectedItem())){
                if (op.equals("+")){
                    stock = stock + Integer.parseInt(stock1.getText());
                }
                
                if (op.equals("-")){
                    stock = stock - Integer.parseInt(stock1.getText());
                }
                
            }
            String newline = id + "\t" + name + "\t" + price + "\t" + stock + "\t" + brand;
            content = content + newline + "\n";
        }
        BufferedWriter bw = new BufferedWriter (new FileWriter ("src\\Storage.txt"));
        bw.append(content);
        bw.close();
        
        if (op.equals("+")){
            JOptionPane.showMessageDialog(null, "Stock Added!");
        }
        if (op.equals("-")){
            JOptionPane.showMessageDialog(null, "Stock Deducted!");
        }

    }
    
    public void showProdID() throws FileNotFoundException{
        Scanner sc = new Scanner (new FileReader ("src\\Storage.txt"));
        while (sc.hasNextLine()) {
            String line = sc.nextLine();
            if (line.equals("")) {
                continue;
            }
            Scanner lineinput = new Scanner (line);
            String id = lineinput.next();
            ProdIDSelect.addItem(id);
        }
        sc.close();
    }
    
    public void existChecker(String ID) throws FileNotFoundException, IOException{
        Scanner sc = new Scanner (new FileReader("src\\Storage.txt"));
        int continuer = 1;
        while (sc.hasNextLine()){
            String line = sc.nextLine();
            Scanner linereader = new Scanner (line);
            String currID = linereader.next();
            if (!currID.equals(ID)){
                continue;
            }
            else{
                continuer = 0;
                break;
            }
        }
        if (continuer == 1){
            addItemx();
        }
        else{
            JOptionPane.showMessageDialog(null, "The Product ID already exists!");
        }
    }
    
    public void showitem() throws FileNotFoundException{
        Scanner sc = new Scanner (new FileReader ("src\\BrandNames.txt"));
        while (sc.hasNextLine()) {
            String line = sc.nextLine();
            if (line.equals("")) {
                continue;
            }
            Scanner lineinput = new Scanner (line);
            String name = lineinput.nextLine();
            BrandName.addItem(name);
        }
        sc.close();
    }
    public void showProd() throws FileNotFoundException{
        Scanner sc = new Scanner (new FileReader ("src\\Storage.txt"));
        while (sc.hasNextLine()) {
            String line = sc.nextLine();
            if (line.equals("")) {
                continue;
            }
            Scanner lineinput = new Scanner (line);
            String id = lineinput.next();
            String name = lineinput.next();
            ProdNameSelect.addItem(name);
        }
        sc.close();
    }
    
    public String underScorer(){
        Scanner sc = new Scanner (prodName.getText());
        String start = sc.next();
        while(sc.hasNext()){
            start = start + "_" + sc.next();
        }
        return start;
    }
    
    public String brandCheck() throws FileNotFoundException{
        Scanner sc = new Scanner (new FileReader ("src\\Storage.txt"));
        String finalBr = "";
        while (sc.hasNextLine()){
            String line = sc.nextLine();
            if (line.equals("")){
                continue;
            }
            Scanner linereader = new Scanner (line);
            String id = linereader.next();
            String name = linereader.next();
            String price = linereader.next();
            int stock = linereader.nextInt();
            String brand = linereader.next();
            
            if (name.equals(ProdNameSelect.getSelectedItem())){
               finalBr = brand;
            }
        }
        
        return finalBr;
    }
    public void home() throws FileNotFoundException{
        MainFrame mf = new MainFrame();
        mf.show();
        this.dispose();
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> BrandName;
    private javax.swing.JComboBox<String> ProdIDSelect;
    private javax.swing.JComboBox<String> ProdNameSelect;
    private javax.swing.JTextField brbr;
    private javax.swing.JButton home;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField price;
    private javax.swing.JTextField prodID;
    private javax.swing.JTextField prodName;
    private javax.swing.JTextField stock;
    private javax.swing.JTextField stock1;
    // End of variables declaration//GEN-END:variables
}
