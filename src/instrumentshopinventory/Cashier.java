/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package instrumentshopinventory;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Flinchy
 */
public class Cashier extends javax.swing.JFrame {

    /**
     * Creates new form Cahier
     */
    private int total = 0;
    public Cashier() throws FileNotFoundException, IOException {
        initComponents();
        showProd();
        clear();
        
        pieces.addKeyListener(new KeyAdapter() {
               public void keyTyped(KeyEvent e) {
                   char c = e.getKeyChar();
                   if (!((c >= '0') && (c <= '9') ||
                           (c == KeyEvent.VK_BACK_SPACE) ||
                           (c == KeyEvent.VK_DELETE))) {
                       getToolkit().beep();
                       e.consume();
                   }
               }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        ProdNameSelect = new javax.swing.JComboBox<>();
        brbr = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        pieces = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        Total = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        CLEAR = new javax.swing.JButton();
        home = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cashier");

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        table.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Prod. ID", "Prod. Name", "Price", "Pieces"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Product Name");

        ProdNameSelect.setBackground(new java.awt.Color(51, 51, 51));
        ProdNameSelect.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        ProdNameSelect.setForeground(new java.awt.Color(255, 255, 255));
        ProdNameSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Product" }));
        ProdNameSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProdNameSelectActionPerformed(evt);
            }
        });

        brbr.setBackground(new java.awt.Color(51, 51, 51));
        brbr.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        brbr.setForeground(new java.awt.Color(255, 255, 255));
        brbr.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Brand");

        jLabel11.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Pieces");

        pieces.setBackground(new java.awt.Color(51, 51, 51));
        pieces.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        pieces.setForeground(new java.awt.Color(255, 255, 255));

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("ADD >>");
        jButton2.setToolTipText("");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("CASHIER");

        jLabel14.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("TOTAL");

        Total.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        Total.setForeground(new java.awt.Color(255, 255, 255));
        Total.setText("0");

        jButton3.setBackground(new java.awt.Color(51, 51, 51));
        jButton3.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("PROCEED >>");
        jButton3.setToolTipText("");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        CLEAR.setBackground(new java.awt.Color(51, 51, 51));
        CLEAR.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        CLEAR.setForeground(new java.awt.Color(255, 255, 255));
        CLEAR.setText("CLEAR");
        CLEAR.setToolTipText("");
        CLEAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CLEARActionPerformed(evt);
            }
        });

        home.setBackground(new java.awt.Color(51, 51, 51));
        home.setForeground(new java.awt.Color(255, 255, 255));
        home.setText("HOME");
        home.setToolTipText("");
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ProdNameSelect, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pieces, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(brbr, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CLEAR, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Total)
                                    .addComponent(jLabel14)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(home)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3)))
                        .addGap(23, 23, 23))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ProdNameSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(brbr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pieces, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CLEAR))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Total)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                        .addComponent(jButton3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(home)))
                .addGap(47, 47, 47))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ProdNameSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProdNameSelectActionPerformed
        try {
            // TODO add your handling code here:
            brbr.setText(brandCheck());
        } catch (FileNotFoundException ex) {
            Logger.getLogger(addItem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ProdNameSelectActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            if (ProdNameSelect.getSelectedItem().equals("Select Product") | brbr.getText().equals("") | pieces.getText().equals("")){
                JOptionPane.showMessageDialog(null, "There seems to be missing fields!");
            }else{
                addItem();
            }
        } catch (IOException ex) {
            Logger.getLogger(Cashier.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            // TODO add your handling code here:
            int continuer = recordSales();
            if (continuer == 1){
            JOptionPane.showMessageDialog(null, "SOLD!");
            clear();
            }
            else{
                JOptionPane.showMessageDialog(null, "INSUFFICIENT STOCKS!");
            }
        } catch (IOException ex) {
            Logger.getLogger(Cashier.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void CLEARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CLEARActionPerformed
        try {
            // TODO add your handling code here:
            clear();
        } catch (IOException ex) {
            Logger.getLogger(Cashier.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_CLEARActionPerformed

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        try {
            // TODO add your handling code here:
            home();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(BrandManagement.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_homeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cashier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cashier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cashier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cashier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Cashier().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Cashier.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    public String brandCheck() throws FileNotFoundException{
        Scanner sc = new Scanner (new FileReader ("src\\Storage.txt"));
        String content = "";
        String finalBr = "";
        while (sc.hasNextLine()){
            String line = sc.nextLine();
            if (line.equals("")){
                continue;
            }
            Scanner linereader = new Scanner (line);
            String id = linereader.next();
            String name = linereader.next();
            String price = linereader.next();
            int stock = linereader.nextInt();
            String brand = linereader.next();
            
            if (name.equals(ProdNameSelect.getSelectedItem())){
               finalBr = brand;
            }
        }
        
        return finalBr;
    }
    
    public void showProd() throws FileNotFoundException{
        Scanner sc = new Scanner (new FileReader ("src\\Storage.txt"));
        while (sc.hasNextLine()) {
            String line = sc.nextLine();
            if (line.equals("")) {
                continue;
            }
            Scanner lineinput = new Scanner (line);
            String id = lineinput.next();
            String name = lineinput.next();
            ProdNameSelect.addItem(name);
        }
        sc.close();
    }
    
    public void addItem() throws IOException{
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        String nline = "";
        
        
        if (!pieces.getText().equals("")){
        try {
            Scanner sc = new Scanner (new FileReader ("src\\Storage.txt"));
            
            while (sc.hasNextLine()) {
                String line = sc.nextLine();
                Scanner linereader = new Scanner (line);
                String a1 = linereader.next();
                String a2 = linereader.next();
                String a3 = linereader.next();
                String a4 = linereader.next();
                String a5 = linereader.next();
                if (line.equals("") || !a2.equals(ProdNameSelect.getSelectedItem())) {
                    continue;
                }
                else{
                    nline = a1 + "\t" + ProdNameSelect.getSelectedItem() + "\t" + (Integer.parseInt(a3) * Integer.parseInt(pieces.getText())) + "\t" + pieces.getText();
                    
                    BufferedWriter bw = new BufferedWriter (new FileWriter ("src\\Cashier.txt", true));
                    bw.append(nline + "\n");
                    bw.close();
                    tempoRecordSales(a1 + "\t" + a2 + "\t" + a5 + "\t" + Integer.parseInt(pieces.getText()) + "\t" +(Integer.parseInt(a3) * Integer.parseInt(pieces.getText())));
                    total = total + (Integer.parseInt(a3) * Integer.parseInt(pieces.getText()));
                    Total.setText(total + "");
                    break;
                }
            }
            String data[] = nline.split("\t");
            model.addRow(data);
            pieces.setText("");
            sc.close();
        }
        catch (FileNotFoundException e1) {
            e1.printStackTrace();
        }
        }
        else{
            JOptionPane.showMessageDialog(null, "Please put the number of pieces!");
        }
    }
    
    public void clear() throws IOException{
        BufferedWriter bw = new BufferedWriter (new FileWriter ("src\\Cashier.txt"));
        bw.append("");
        BufferedWriter bw1 = new BufferedWriter (new FileWriter ("src\\TempoSales.txt"));
        bw1.append("");
        Total.setText("");
        ProdNameSelect.setSelectedItem("Select Product");
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
    }
    
    public int recordSales() throws IOException{
        String content = "";
        Scanner sc = new Scanner (new FileReader("src\\TempoSales.txt"));
        int continuer = 1;
        
        while(sc.hasNextLine()){
            String line = sc.nextLine();
            Scanner linereader = new Scanner (line);
            String id = linereader.next();
            String name = linereader.next();
            String brand = linereader.next();
            int piece = linereader.nextInt();
            int price = linereader.nextInt();
            Scanner sc1 = new Scanner (new FileReader("src\\Storage.txt"));
            
            while (sc1.hasNextLine()){
                String line2 = sc1.nextLine();
                Scanner linereader1 = new Scanner (line2);
                String id1 = linereader1.next();
                String name1 = linereader1.next();
                int price1 = linereader1.nextInt();
                int stock = linereader1.nextInt();
                String brand1 = linereader1.next();
                if (id.equals(id1)){
                    if (stock < piece){
                        continuer = 0;
                    }
                    if (stock <= 0){
                        continuer = 0;
                    }
                }
            }
            
            content = content + line + "\n";
        }
        if (continuer == 1){
        BufferedWriter bw = new BufferedWriter (new FileWriter ("src\\Sales.txt", true));
        bw.append(content);
        bw.close();
        
        minusStocks();
        }
        return continuer;
    }
    
    public void minusStocks() throws FileNotFoundException, IOException{
        Scanner sc1 = new Scanner (new FileReader("src\\TempoSales.txt"));
        while(sc1.hasNextLine()){
            String startingLine = "";
            String content = "";
            int stocksLeft = 0;
            String line = sc1.nextLine();
            if (line.equals("")){
                continue;
            }
            
            Scanner linereader = new Scanner (line);
            String id = linereader.next();
            String name = linereader.next();
            String brand = linereader.next();
            int pieces = linereader.nextInt();
            Scanner sc = new Scanner (new FileReader("src\\Storage.txt"));
            while (sc.hasNextLine()){
                String line2 = sc.nextLine();
                
                if (line2.equals("")){
                continue;
                }
                Scanner linereader2 = new Scanner (line2);
                String id1 = linereader2.next();
                String name1 = linereader2.next();
                String price1 = linereader2.next();
                int stocks = linereader2.nextInt();
                String brand1= linereader2.next();
                
                if (id.equals(id1)){
                    stocksLeft = stocks - pieces;
                    startingLine = id1 + "\t"  + name1  + "\t"  + price1  + "\t"  + stocksLeft  + "\t"  + brand1 + "\n";
                }
                else{
                    startingLine = id1 + "\t"  + name1  + "\t"  + price1  + "\t"  + stocks  + "\t"  + brand1 + "\n";
                }
                content = content + startingLine;
                BufferedWriter bw = new BufferedWriter (new FileWriter ("src\\Storage.txt"));
                bw.append(content);
                bw.close();
            }
            sc.close();
        }
    }
    
    public void tempoRecordSales(String line) throws IOException{
        BufferedWriter bw = new BufferedWriter (new FileWriter ("src\\TempoSales.txt", true));
        bw.append(line + "\n");
        bw.close();
    }
    public void home() throws FileNotFoundException{
        MainFrame mf = new MainFrame();
        mf.show();
        this.dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CLEAR;
    private javax.swing.JComboBox<String> ProdNameSelect;
    private javax.swing.JLabel Total;
    private javax.swing.JTextField brbr;
    private javax.swing.JButton home;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField pieces;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
